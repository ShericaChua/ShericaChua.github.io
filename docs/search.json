[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "designbysc",
    "section": "",
    "text": "I’m Sherica Chua, an aspiring architect and passionate creative mind with a unique vision. From a young age, I’ve been entranced by the profound impact that architecture has on our lives and the world around us. This fascination has been the driving force behind my journey to pursue a Bachelor of Architecture, where I explore the art of shaping spaces that inspire, comfort, and serve the needs of our communities.\nIn addition to my architectural pursuits, my heart beats for art and design. This love for aesthetics and user-centered creativity has led me to pursue a minor in UX/UI design. I find immense joy in connecting with people and crafting experiences that resonate with them. My motivation in creating, whether it’s through architectural wonders or intuitive digital interfaces, is rooted in the user—designing for their needs, desires, and emotions.\nJoin me in this exploration of the intersection between the physical and digital worlds, where architecture and UX/UI design blend seamlessly to shape the environments of today and tomorrow. Together, let’s create spaces and experiences that leave a lasting impact on our lives.\nWelcome to my world of design, where every project is a canvas for innovation and a testament to the power of thoughtful, user-centered creation.\nVIEW CV 2021\n____"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "designbysc",
    "section": "",
    "text": "WELCOME to make yourself at home!\nGet some inspiration if you need too! BUT NO WHOLESALES YEAH&lt;3\n____"
  },
  {
    "objectID": "NM2207-Week9_Final.html",
    "href": "NM2207-Week9_Final.html",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "Have you heard of San Francisco Trees?! Let ME…. TELL YOU more about it!\n\n\n\nAccording to studies on urban forestry and sustainability, the state of a city’s tree population can significantly impact the environment, air quality, and overall well-being of its residents. For instance, research by the United Nations has shown that urban green spaces, including trees, are vital for mitigating climate change. This question is important because understanding how San Francisco’s tree population has evolved is crucial for assessing the city’s progress in environmental sustainability and urban planning, which has wide-reaching effects on residents’ quality of life."
  },
  {
    "objectID": "Achievements.html",
    "href": "Achievements.html",
    "title": "designbysc",
    "section": "",
    "text": "Education & Leaderships\n\n2020-2023\nDiploma in Interior Design\nSingapore Polytechnic \nVIEW ACHIEVEMENTS\nVIEW CERTS\n2022-2023   Gradshow Leader - Org Secretary\n2022            Class Management Committee - Deputy Class                                      Representative \n2022            Polytechnic Forum\n2022            DID Showcase - Org Secretary\n2022            The Vertical Live Project Workshop\n2022            Pre-University Seminar\n2021-2022  Academic School Student Committee - President (SIDS                       Student Chapter) \n2021           LEAP Programme (School Leaders)\n2021-2022  SP NYAA Ambassador \n2020-2021  PA - SP Community Leadership Programme\n2020           Class Management Committee (Treasurer)\n\n\n2018-2019\nGCE O Level\nLoyang View Secondary School\n(School Merge with Green View)\n2018           Class Vice-Chairperson \n2018           Senior Student Councillor\n2018           Girl Guides - Assistance Company Leader (Logistics)\n2018           NYAA Silver Award\n\n\n2015-2017\nGCE N Level\nLoyang Secondary School\n2015-2018  Student Councillor\n2017-2018  Girl Guides - Assistance Company Leader (Logistics)\n2016           NYAA Bronze Award\n2017           NYAA Silver Award\n2017           Participated Overseas Educational Programme (OEP) in                       Suzhou, China\n\n\n2008-2014\nPSLE\nMeridian Primary School\nDidn’t participate much as was trying to improve my results, but was very active with events held by the school such as Sports Day, Magical Night, etc. But always want to be a leader to make an impact."
  },
  {
    "objectID": "about.html#get-in-touch",
    "href": "about.html#get-in-touch",
    "title": "designbysc",
    "section": "Get In Touch",
    "text": "Get In Touch\n\nEmail\nshericachua@gmail.com\n\n\nFrom\nSingapore, Singapore\n\n\nInstagram\n@design.bysc"
  },
  {
    "objectID": "index.html#spatial-cube",
    "href": "index.html#spatial-cube",
    "title": "designbysc",
    "section": "Spatial Cube",
    "text": "Spatial Cube"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "designbysc",
    "section": "2020",
    "text": "2020"
  },
  {
    "objectID": "index.html#pop-up",
    "href": "index.html#pop-up",
    "title": "designbysc",
    "section": "Pop Up",
    "text": "Pop Up"
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "designbysc",
    "section": "2021",
    "text": "2021"
  },
  {
    "objectID": "index.html#final-submission",
    "href": "index.html#final-submission",
    "title": "designbysc",
    "section": "Final Submission",
    "text": "Final Submission\nVIEW ME"
  },
  {
    "objectID": "index.html#weekly-dairies",
    "href": "index.html#weekly-dairies",
    "title": "designbysc",
    "section": "Weekly Dairies",
    "text": "Weekly Dairies\nVIEW WEEK 1 TO WEEK 9"
  },
  {
    "objectID": "index.html#singapore-polytechnic",
    "href": "index.html#singapore-polytechnic",
    "title": "designbysc",
    "section": "Singapore Polytechnic",
    "text": "Singapore Polytechnic\n(To be added)"
  },
  {
    "objectID": "index.html#national-university-of-singapore",
    "href": "index.html#national-university-of-singapore",
    "title": "designbysc",
    "section": "National University of Singapore",
    "text": "National University of Singapore\n(To be added)"
  },
  {
    "objectID": "NM2207-Week9_Final.html#final-submission",
    "href": "NM2207-Week9_Final.html#final-submission",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "VIEW ME"
  },
  {
    "objectID": "NM2207-Week9_Final.html#weekly-dairies",
    "href": "NM2207-Week9_Final.html#weekly-dairies",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "VIEW WEEK 1 TO WEEK 9"
  },
  {
    "objectID": "NM2207-Week9_Final.html#how-has-the-tree-population-in-san-francisco-changed-over-the-past-decade",
    "href": "NM2207-Week9_Final.html#how-has-the-tree-population-in-san-francisco-changed-over-the-past-decade",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "According to studies on urban forestry and sustainability, the state of a city’s tree population can significantly impact the environment, air quality, and overall well-being of its residents. For instance, research by the United Nations has shown that urban green spaces, including trees, are vital for mitigating climate change. This question is important because understanding how San Francisco’s tree population has evolved is crucial for assessing the city’s progress in environmental sustainability and urban planning, which has wide-reaching effects on residents’ quality of life."
  },
  {
    "objectID": "index.html#weekly-dairies-1-to-13",
    "href": "index.html#weekly-dairies-1-to-13",
    "title": "designbysc",
    "section": "Weekly Dairies 1 to 13",
    "text": "Weekly Dairies 1 to 13\nVIEW ME"
  },
  {
    "objectID": "NM2207-Week9_Final.html#dataset",
    "href": "NM2207-Week9_Final.html#dataset",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "# A tibble: 1 × 1\n  nb_species\n       &lt;int&gt;\n1        571\n\n\n\n\n\n\n\n\n\n\nfunction (x, y, ...) \nUseMethod(\"plot\")\n&lt;bytecode: 0x0000019341765528&gt;\n&lt;environment: namespace:base&gt;"
  },
  {
    "objectID": "NM2207-Week9_Final.html#san-francisco-trees-dataset",
    "href": "NM2207-Week9_Final.html#san-francisco-trees-dataset",
    "title": "NM2207- Final Submission",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggmap)\n\nℹ Google's Terms of Service: &lt;https://mapsplatform.google.com&gt;\nℹ Please cite ggmap if you use it! Use `citation(\"ggmap\")` for details.\n\nlibrary(osmdata)\n\nWarning: package 'osmdata' was built under R version 4.3.2\n\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(extrafont)\n\nRegistering fonts with R\n\nlibrary(sf)\n\nWarning: package 'sf' was built under R version 4.3.2\n\n\nLinking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE\n\nlibrary(lubridate)\nlibrary(viridis)\n\nWarning: package 'viridis' was built under R version 4.3.2\n\n\nLoading required package: viridisLite\n\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.3.2\n\nlibrary(ggtext)\n\nWarning: package 'ggtext' was built under R version 4.3.2\n\nloadfonts(device = \"win\")\n\nsf_trees &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')\n\nRows: 192987 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): legal_status, species, address, site_info, caretaker, plot_size\ndbl  (5): tree_id, site_order, dbh, latitude, longitude\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nroads &lt;- getbb(\"San Francisco\") %&gt;% \n  opq() %&gt;% \n  add_osm_feature(\"highway\") %&gt;% \n  osmdata_sf()\n\ncoast &lt;- getbb(\"San Francisco\") %&gt;% \n  opq() %&gt;% \n  add_osm_feature(key = \"natural\", value = \"coastline\") %&gt;%\n  osmdata_sf()\n\nsf_trees %&gt;%\n  summarise(nb_species = length(unique(species)))\n\n# A tibble: 1 × 1\n  nb_species\n       &lt;int&gt;\n1        571\n\n# Vector of years to fill the gap in the dataset\n\nyears &lt;- tibble(year = seq(1954,2019,1), nb = 0)\n\n# Number of different species per year\n\np1 &lt;- sf_trees %&gt;%\n  mutate(year = year(date)) %&gt;%\n  filter(year != 2020) %&gt;%\n  group_by(year) %&gt;%\n  summarise(nb_species = length(unique(species))) %&gt;%\n  right_join(years) %&gt;%\n  mutate(nb_species = ifelse(is.na(nb_species), 0, nb_species)) %&gt;% \n  ggplot(aes(year, nb_species)) +\n  geom_col(fill = \"#6DD19C\", color = \"#effdee\", size = 1) +\n  scale_x_continuous(limits=c(1955,2020))+\n  labs(title= \"Number of different specie planted each year\",\n       y = \"# different specie\") +\n  theme(panel.background = element_rect(fill = \"white\"),\n        plot.background = element_rect(fill = \"white\", color = NA),\n        legend.background = element_rect(fill = \"white\"),\n        plot.title = element_text(color = \"#555555\", hjust = 0.5),\n        panel.grid.major =  element_line(color = \"#555555\", linetype = \"dashed\"),\n        panel.grid.minor =  element_line(color = \"#555555\", linetype = \"dotted\"),\n        axis.text = element_text(color = \"#555555\"),\n        axis.title = element_text(color = \"#555555\"),\n        axis.title.x = element_blank())\n\nJoining with `by = join_by(year)`\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\npatchwork &lt;- ( p1 )\n\npatchwork + plot_annotation(title = \"San Francisco Trees\",\n                            subtitle = \"Evolution of the number of trees & species.\",\n                            caption = \"Visualisation: Sherica Chua | Data: data.sfgov.org\",\n                            theme = theme(plot.background = element_rect(fill = \"white\"),\n                                        plot.title = element_text(color = \"#555555\", size = 18, hjust = 0.5),\n                                        plot.subtitle = element_text(color = \"#555555\", size = 14, hjust = 0.5),\n                                        plot.caption = element_text(color = \"#555555\", hjust = 1),\n                                        panel.background = element_rect(fill = \"white\")))+\n            plot_layout(nrow = 2, heights = c(0.05, 5))\n\nWarning: Removed 1 rows containing missing values (`position_stack()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_col()`).\n\n\n\n\n\n\nThe top graph shows the evolution of the number of species planted each year, while the bottom one shows the evolution of the number of trees planted each year. San Francisco has now reached 192987 trees of 571 different species, with a higher density on the middle / east side of the city.”\n\n\nlibrary(tidyverse)\nlibrary(ggmap)\nlibrary(osmdata)\nlibrary(extrafont)\nlibrary(sf)\nlibrary(lubridate)\nlibrary(viridis)\nlibrary(patchwork)\nlibrary(ggtext)\n\nloadfonts(device = \"win\")\n\nsf_trees &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')\n\nRows: 192987 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): legal_status, species, address, site_info, caretaker, plot_size\ndbl  (5): tree_id, site_order, dbh, latitude, longitude\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nroads &lt;- getbb(\"San Francisco\") %&gt;% \n  opq() %&gt;% \n  add_osm_feature(\"highway\") %&gt;% \n  osmdata_sf()\n\ncoast &lt;- getbb(\"San Francisco\") %&gt;% \n  opq() %&gt;% \n  add_osm_feature(key = \"natural\", value = \"coastline\") %&gt;%\n  osmdata_sf()\n\nsf_trees %&gt;%\n  summarise(nb_species = length(unique(species)))\n\n# A tibble: 1 × 1\n  nb_species\n       &lt;int&gt;\n1        571\n\n# Vector of years to fill the gap in the dataset\n\nyears &lt;- tibble(year = seq(1954,2019,1), nb = 0)\n\n\n# Number of trees planted each year\n\np2 &lt;- sf_trees %&gt;%\n  mutate(year = year(date)) %&gt;%\n  filter(year != 2020 ) %&gt;%\n  filter(!is.na(year)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(nb_trees = n()) %&gt;% \n  right_join(years) %&gt;%\n  mutate(nb_trees = ifelse(is.na(nb_trees), 0, nb_trees)) %&gt;%\n  ggplot(aes(year, nb_trees)) +\n  geom_line(color = \"#6DD19C\", size = 1) +\n  scale_x_continuous(limits=c(1955,2020))+\n  labs(title= \"Number of trees planted each year\",\n       y = \"# of trees\") +\n  theme(panel.background = element_rect(fill = \"white\"),\n        plot.background = element_rect(fill = \"white\", color = NA),\n        legend.background = element_rect(fill = \"white\"),\n        plot.title = element_text(color = \"#555555\", hjust = 0.5),\n        panel.grid.major =  element_line(color = \"#555555\", linetype = \"dashed\"),\n        panel.grid.minor =  element_line(color = \"#555555\", linetype = \"dotted\"),\n        axis.text = element_text(color = \"#555555\"),\n        axis.title = element_text(color = \"#555555\"),\n        axis.title.x = element_blank())\n\nJoining with `by = join_by(year)`\n\npatchwork &lt;- ( p2 )\n\npatchwork + plot_annotation(title = \"San Francisco Trees\",\n                            subtitle = \"Evolution of the number of trees & species.\",\n                            caption = \"Visualisation: Sherica Chua | Data: data.sfgov.org\",\n                            theme = theme(plot.background = element_rect(fill = \"white\"),\n                                        plot.title = element_text(color = \"#555555\", size = 18, hjust = 0.5),\n                                        plot.subtitle = element_text(color = \"#555555\", size = 14, hjust = 0.5),\n                                        plot.caption = element_text(color = \"#555555\", hjust = 1),\n                                        panel.background = element_rect(fill = \"white\")))+\n            plot_layout(nrow = 2, heights = c(0.05, 5))\n\nWarning: Removed 1 row containing missing values (`geom_line()`)."
  },
  {
    "objectID": "NM2207-Week9_Final.html#findings-about-san-francisco-trees",
    "href": "NM2207-Week9_Final.html#findings-about-san-francisco-trees",
    "title": "NM2207- Final Submission",
    "section": "Findings about San Francisco Trees",
    "text": "Findings about San Francisco Trees"
  },
  {
    "objectID": "NM2207-Week9_Final.html#san-francisos-tree-mapping",
    "href": "NM2207-Week9_Final.html#san-francisos-tree-mapping",
    "title": "NM2207- Final Submission",
    "section": "San Franciso’s Tree Mapping",
    "text": "San Franciso’s Tree Mapping\n\n&lt;iframe&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;designbysc&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;designbysc&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Home\"&gt;Home&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/index.html\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:About Me\"&gt;About Me&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/about.html\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Wk9-Final\"&gt;Wk9-Final&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/NM2207-Week9_Final.html\"&gt;/NM2207-Week9_Final.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;designbysc - NM2207- Final Submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;designbysc - NM2207- Final Submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;designbysc - NM2207- Final Submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;designbysc&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  }
]